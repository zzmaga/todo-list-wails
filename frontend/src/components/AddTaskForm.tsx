import { useState } from 'react';
import type { Priority } from '../lib/types';

interface AddTaskFormProps {
  onAdd: (title: string, dueISO?: string, priority?: Priority) => void;
}

export default function AddTaskForm({ onAdd }: AddTaskFormProps) {
  const [isExpanded, setIsExpanded] = useState(false);
  const [title, setTitle] = useState('');
  const [due, setDue] = useState<string>('');
  const [priority, setPriority] = useState<Priority>('medium');

  const submit = (e: React.FormEvent) => {
    e.preventDefault();
    const trimmed = title.trim();
    if (!trimmed) return; // –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –≤–≤–æ–¥–∞
    onAdd(trimmed, due ? new Date(due).toISOString() : undefined, priority);
    setTitle(''); 
    setDue(''); 
    setPriority('medium');
    setIsExpanded(false);
  };

  const cancel = () => {
    setTitle('');
    setDue('');
    setPriority('medium');
    setIsExpanded(false);
  };

  // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ —Å–≤–µ—Ä–Ω—É—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É
  if (!isExpanded) {
    return (
      <div className="add-task-button">
        <button 
          className="btn primary add-btn" 
          onClick={() => setIsExpanded(true)}
        >
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
        </button>
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Ñ–æ—Ä–º—É
  return (
    <div className="add-task-form-container">
      <form className="add-form" onSubmit={submit}>
        <div className="form-header">
          <h3>–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞</h3>
          <button 
            type="button" 
            className="btn icon" 
            onClick={cancel}
            title="–û—Ç–º–µ–Ω–∞"
          >
            ‚úï
          </button>
        </div>
        
        <div className="form-fields">
          <input 
            className="input" 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏..." 
            value={title} 
            onChange={e => setTitle(e.target.value)}
            autoFocus
          />
          
          <div className="form-row">
            <input 
              type="datetime-local" 
              value={due} 
              onChange={e => setDue(e.target.value)} 
              title="–î–µ–¥–ª–∞–π–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
              className="input"
            />
            
            <select 
              value={priority} 
              onChange={e => setPriority(e.target.value as Priority)}
              className="input"
            >
              <option value="low">üü¢ –ù–∏–∑–∫–∏–π</option>
              <option value="medium">üü° –°—Ä–µ–¥–Ω–∏–π</option>
              <option value="high">üî¥ –í—ã—Å–æ–∫–∏–π</option>
            </select>
          </div>
        </div>
        
        <div className="form-actions">
          <button type="button" className="btn" onClick={cancel}>
            –û—Ç–º–µ–Ω–∞
          </button>
          <button className="btn primary" type="submit">
            ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
          </button>
        </div>
      </form>
    </div>
  );
}
